<?xml version="1.0" encoding="UTF-8"?>
<!--
    Application context definition for PetClinic Datasource.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd">

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <context:property-placeholder location="classpath:spring/data-access.properties" system-properties-mode="OVERRIDE"/>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
    	 <constructor-arg ref="h2DataSource"/>
	</bean>

	<jdbc:embedded-database id="h2DataSource" type="H2"/>

	<bean id="org.h2.tools.Server"
	      class="org.h2.tools.Server"
	      factory-method="createTcpServer"
	      init-method="start"
	      destroy-method="stop" lazy-init="false">
	  <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort, ${jdbc.embeddedPort}"/>
	</bean>

    <!-- Database initializer. If any of the script fails, the initialization stops. -->
    <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="${jdbc.initLocation}"/>
    </jdbc:initialize-database>

	<beans profile="testdata">
	    <!-- Test-data initializer. If any of the script fails, the initialization stops. -->
	    <jdbc:initialize-database data-source="dataSource">
	        <jdbc:script location="${jdbc.dataLocation}"/>
	    </jdbc:initialize-database>
    </beans>

</beans>